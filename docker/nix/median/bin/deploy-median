#!/usr/bin/env bash
set -e

join() { local IFS="$1"; shift; echo "$*"; }

declare -a toLift
declare -a pairs

for arg in "$@"; do
  if [[ $arg =~ ^0x ]]; then
    toLift+=("${arg#0x}")
  else
    pairs+=("$arg")
  fi
done

pairs=(${pairs[@]-ETHUSD})

output=$(
  for pair in "${pairs[@]}"; do
    contractName=${pair^^}
    contractName=${contractName/\/}
    contractName=Median${contractName/BTC/WBTC}
    address=$(dapp create $contractName)
    jq -n --arg p $pair --arg a $address '{($p):$a}'
  done | jq -Ss add
)

if [[ -n "${toLift[*]}" ]]; then
  for pair in "${pairs[@]}"; do
    address=$(jq -r --arg p $pair '.[$p]' <<<"$output")
    seth send $address 'lift(address[] memory)' "[$(join , "${toLift[@]}")]" >&2
  done
fi

echo "$output"
