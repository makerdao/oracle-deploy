#!/usr/bin/env bash
set -u -e -o pipefail

export CONFIG_FILE="${CONFIG_FILE:-"./monitor.json"}"
graphiteUrl=$(jq -r '.graphiteUrl' "$CONFIG_FILE")
graphiteApiKey=$(jq -r '.graphiteApiKey' "$CONFIG_FILE")
intervalSeconds=$(jq -c '.intervalSeconds' "$CONFIG_FILE")
env=$(jq -r '.env' "$CONFIG_FILE")
node=$(jq -r '.node' "$CONFIG_FILE")
ethRpcUrl=$(jq -r '.ethRpcUrl' "$CONFIG_FILE")
network=$(jq -r '.network' "$CONFIG_FILE")
contracts=$(jq -c '.contracts[]' "$CONFIG_FILE")

echo >&2 "Gathering metrics to send to Graphite"

{
		probe-source-gofer <<< "$contracts" \
			| jq --compact-output \
				--arg env "$env" \
				--arg node "$node" \
				--arg service "gofer" \
				--arg metric "gofer_price" \
				--argjson intervalSeconds "$intervalSeconds" \
				'{
					name:(.wat+"."+$metric),
					value:(.price|tonumber),
					time:.ts,
					interval:$intervalSeconds,
					tags:["sys=oracle","env="+$env,"node="+$node,"service="+$service,"metric="+$metric,"symbol="+.wat]
				}'

		probe-contracts "$ethRpcUrl" <<< "$contracts" \
			| jq --compact-output \
				--arg env "$env" \
				--arg node "$node" \
				--arg service "eth" \
				--arg metric "contract_price" \
				--arg network "$network" \
				--argjson intervalSeconds "$intervalSeconds" \
				'{
					name:(.wat+"."+$metric),
					value:(.price|tonumber),
					time:.ts,
					interval:$intervalSeconds,
					tags:["sys=oracle","env="+$env,"node="+$node,"service="+$service,"metric="+$metric,"symbol="+.wat,"network="+$network]
				}'
} \
	| jq --slurp --compact-output \
	| curl --silent --request POST \
		--header "Authorization: Bearer $graphiteApiKey" \
		--header "Content-Type: application/json" \
		--data @- \
		"$graphiteUrl"
